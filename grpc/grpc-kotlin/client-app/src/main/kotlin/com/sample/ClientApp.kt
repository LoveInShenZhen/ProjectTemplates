/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.sample

import com.examples.GreeterGrpc
import com.examples.HelloRequest
import io.grpc.ManagedChannelBuilder
import sz.scaffold.tools.logger.Logger
import java.util.concurrent.ForkJoinPool

object ClientApp {

    @JvmStatic
    fun main(args: Array<String>) {
        val builder = ManagedChannelBuilder.forAddress("localhost", 8888)
            .usePlaintext()

        val channel = builder.build()
        val blockClient = GreeterGrpc.newBlockingStub(channel)
        val client = GreeterGrpc.newFutureStub(channel)


        val reqest = HelloRequest.newBuilder().setName("帅哥").build()
        val future = client.sayHello(reqest)

        future.addListener(Runnable {
            Logger.debug("==> is done: ${future.isDone}")
            Logger.debug("==> msg: ${future.get().message}")
        }, ForkJoinPool.commonPool())


        val response = blockClient.sayHello(reqest)

        Logger.debug("response: ${response.toString()}")
        Logger.debug("response msg: ${response.message}")
    }
}


