
app {
  httpServer {
    port = 9000
    host = "0.0.0.0"
  }

  vertx {
    options {
      clustered = false
      workerPoolSize = 16
      preferNativeTransport = true
    }

//    如果 vert.x 工作在集群模式(即 app.vertx.options.clustered == true), 则需要配置 zookeeper
//    zookeeper {
//      // zookeeper 主机， 多个主机配置方式, 例如： "zooServer_1:2181,zooServer_2:2181,zooServer_3:2181"
//      // 默认连接本地的 zookeeper
//      zookeeperHosts = "localhost:2181"
//      sessionTimeout = 20000
//      connectTimeout = 3000
//      rootPath = "io.vertx"
//      retry {
//        initialSleepTime = 100
//        intervalTimes = 10000
//        maxTimes = 5
//      }
//    }
  }

  cache {

    // 默认配置一个名称为 local_redis 的redis 缓存, 默认连接本机上的 redis server
    configs {
      // 配置项的 key 为缓存名称, 缓存名称不能重复
      local_redis_cache {
        // 缓存实现对应的工厂类,
        factory = "sz.scaffold.redis.cache.RedisCacheFactory"
        // 缓存参数, 根据实现类的不同, 参数也不同
        // redis 缓存参数配置请参考:
        // 参考1: https://vertx.io/docs/vertx-redis-client/kotlin/#_connecting_to_redis
        // 参考2: https://vertx.io/docs/apidocs/io/vertx/redis/client/RedisOptions.html
        // 参考3: package io.vertx.redis.client 下的 RedisOptionsConverter.java
        options {
          // endpoint 格式说明: redis://[:password@]host[:port][/db-number]
          endpoints = ["redis://localhost:6379/0"]
        }
      }
    }

  }
}